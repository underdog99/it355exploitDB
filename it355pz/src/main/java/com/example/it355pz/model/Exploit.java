
package com.example.it355pz.model;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;


@Entity
//@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
@Table(name = "exploit")
public class Exploit {
    
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "idExp")
    private int id;
    
    @Column(name = "nameExp")
    private String name;
    
    @Column(name = "descExp")
    private String desc;
    
    @Column(name = "dateExp")
    private LocalDateTime date;
    
    @Column(name = "validExp")
    private boolean valid;
    
    /*
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="idPla")
    private Platform pla;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idType")
    private Type type;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idScr")
    private ScriptExp scr;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idPoc")
    private Poc poc;
    */
    
    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "exppla", joinColumns = @JoinColumn(name = "idExp"), inverseJoinColumns = @JoinColumn(name = "idPla"))
    private List <Platform> pla = new ArrayList<>();
    
    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "exptype", joinColumns = @JoinColumn(name = "idExp"), inverseJoinColumns = @JoinColumn(name = "idType"))
    private List <Type> type;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idScr")
    private ScriptExp scr;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idPoc")
    private Poc poc;
    
    //@JsonBackReference
    //@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idUser")
    private User user;
    
    
    public void addPla(Platform pla){
        this.pla.add(pla);
    }
    
    public void addType(Type t){
        this.type.add(t);
    }

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public String getDesc() {
        return desc;
    }

    public LocalDateTime getDate() {
        return date;
    }

    public boolean isValid() {
        return valid;
    }

    public List<Type> getType() {
        return type;
    }

    public User getUser() {
        return user;
    }

    public void setId(int id) {
        this.id = id;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setDesc(String desc) {
        this.desc = desc;
    }

    public void setDate(LocalDateTime date) {
        this.date = date;
    }

    public void setValid(boolean valid) {
        this.valid = valid;
    }

    public void setType(List<Type> type) {
        this.type = type;
    }

    public void setUser(User user) {
        this.user = user;
    }

    public List<Platform> getPla() {
        return pla;
    }

    public void setPla(List<Platform> pla) {
        this.pla = pla;
    } 

    public ScriptExp getScr() {
        return scr;
    }

    public Poc getPoc() {
        return poc;
    }

    public void setScr(ScriptExp scr) {
        this.scr = scr;
    }

    public void setPoc(Poc poc) {
        this.poc = poc;
    }
    
    
}
