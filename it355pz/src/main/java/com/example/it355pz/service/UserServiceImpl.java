
package com.example.it355pz.service;

import com.example.it355pz.dao.RoleDao;
import com.example.it355pz.dao.UserDao;
import com.example.it355pz.model.Role;
import com.example.it355pz.model.User;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.EnableTransactionManagement;
import org.springframework.transaction.annotation.Transactional;


@Service
public class UserServiceImpl implements UserService {
    
    @Autowired
    private UserDao ud;
    
    @Autowired
    private BCryptPasswordEncoder bCryptPasswordEncoder;
    
    @Autowired
    private RoleDao rd;

    @Override
    @Transactional
    public List<User> getUsers() {
        return ud.getUsers();
    }

    @Override
    @Transactional
    public void saveUser(User u) {
        System.out.println("Unutar metode saveUser()");
        u.setPass(bCryptPasswordEncoder.encode(u.getPass()));
        u.setAc(true);
        Role r = rd.findRoleByName("USER");
        System.out.println("Rola: " + r.getRole());
        u.setRoles(new HashSet<Role>(Arrays.asList(r)));
        System.out.println("Pozivanje ud.saveUser()");
        ud.saveUser(u);
    }

    @Override
    @Transactional
    public User getUser(int u) {
        return ud.getUser(u);
    }

    @Override
    @Transactional
    public User deleteUser(User u) {
        return ud.deleteUser(u);
    }

    @Override
    @Transactional
    public void updateUser(User u) {
        ud.updateUser(u);
    }

    @Override
    @Transactional
    public User findUserByEmail(String email) {
        return ud.findUserByEmail(email);
    }

    @Override
    @Transactional
    public User findUserByUname(String uname) {
        return ud.findUserByUname(uname);
    }
    
    
    
}
