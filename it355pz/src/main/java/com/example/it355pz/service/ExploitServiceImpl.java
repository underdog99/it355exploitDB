
package com.example.it355pz.service;

import com.example.it355pz.dao.ExploitDao;
import com.example.it355pz.dao.PlatformDao;
import com.example.it355pz.dao.PocDao;
import com.example.it355pz.dao.ScriptExpDao;
import com.example.it355pz.dao.TypeDao;
import com.example.it355pz.model.Exploit;
import com.example.it355pz.model.Platform;
import com.example.it355pz.model.Poc;
import com.example.it355pz.model.ScriptExp;
import com.example.it355pz.model.Type;
import com.example.it355pz.model.User;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;



@Service
public class ExploitServiceImpl implements ExploitService {
    
    @Autowired
    private ExploitDao ed;
    
    //@Autowired
    //private PlatformDao pd;
    
    //@Autowired
    //private TypeDao td;
    
    //@Autowired
    //private ScriptExpDao sed;
    
    //@Autowired
    //private PocDao pocd;
    
    @Override
    @Transactional
    public List<Exploit> getExploits() {
        return ed.getExploits();
    }

    @Override
    @Transactional
    public void saveExploit(Exploit e) {
        System.out.println("Unutar metode saveExploit()");
        /*
        Platform pla = pd.getPlatform(p.getId());
        Type type = td.getType(t.getId());
        ScriptExp scrExp = sed.getScriptExp(scr.getId());
        Poc poc1 = pocd.getPoc(poc.getId());
        e.setValid(false);
        e.setPla(new ArrayList<Platform>(Arrays.asList(pla)));
        e.setType(new ArrayList<Type>(Arrays.asList(type)));
        e.setScr(new ArrayList<ScriptExp>(Arrays.asList(scrExp)));
        e.setPoc(new ArrayList<Poc>(Arrays.asList(poc1)));
        */
        System.out.println("Pozivanje ed.saveExploit()");
        
        ed.saveExploit(e);
    }

    @Override
    @Transactional
    public Exploit getExploit(int e) {
        return ed.getExploit(e);
    }

    @Override
    @Transactional
    public Exploit deleteExploit(Exploit e) {
        return ed.deleteExploit(e);
    }

    @Override
    @Transactional
    public void updateExploit(Exploit e) {
        ed.updateExploit(e);
    }

    @Override
    @Transactional
    public Exploit findExploitByName(String name) {
        return ed.findExploitByName(name);
    }

    @Override
    @Transactional
    public List<Exploit> findExploitByUsername(User u) {
        return ed.findExploitByUser(u);
    }

    @Override
    @Transactional
    public List<Exploit> searchExp(String s) {
        return ed.searchExp(s);
    }
    
    
}
