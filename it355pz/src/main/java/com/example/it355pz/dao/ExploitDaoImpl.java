
package com.example.it355pz.dao;

import com.example.it355pz.model.Exploit;
import com.example.it355pz.model.User;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;
import org.springframework.stereotype.Repository;


@Repository
public class ExploitDaoImpl implements ExploitDao {
    
    @PersistenceContext
    private EntityManager entityManager;

    
    @Override
    public List<Exploit> getExploits() {
        CriteriaBuilder cb = entityManager.getCriteriaBuilder();
        CriteriaQuery <Exploit> cq = cb.createQuery(Exploit.class);
        Root <Exploit> root = cq.from(Exploit.class);
        cq.select(root);
        Query query = entityManager.createQuery(cq);
        return query.getResultList();
    }

    @Override
    public void saveExploit(Exploit e) {
        entityManager.persist(e);
        System.out.print("Gotovo cuvanje exploita!");
    }

    @Override
    public Exploit getExploit(int id) {
        Exploit e = entityManager.find(Exploit.class, id);
        return e;
    }

    @Override
    public Exploit deleteExploit(Exploit e) {
        if(entityManager.contains(e)){
            entityManager.remove(e);
        }else{
            entityManager.remove(entityManager.merge(e));
        }
        
        return e;
    }

    @Override
    public Exploit updateExploit(Exploit e) {
        entityManager.merge(e);
        return e;
    }

    @Override
    public Exploit findExploitByName(String name) {
        CriteriaBuilder cb = entityManager.getCriteriaBuilder();
        CriteriaQuery<Exploit> cq = cb.createQuery(Exploit.class);
        Root<Exploit> root = cq.from(Exploit.class);
        cq.select(root).where(cb.equal(root.get("name"), name));
        
        Query query = entityManager.createQuery(cq);
        query.setMaxResults(1);
        List<Exploit> res = query.getResultList();
        
        if(res.size() > 0){
            return res.get(0);
        }else{
            return null;
        }
    }

    @Override
    public List<Exploit> findExploitByUser(User u) {
        CriteriaBuilder cb = entityManager.getCriteriaBuilder();
        CriteriaQuery<Exploit> cq = cb.createQuery(Exploit.class);
        Root<Exploit> root = cq.from(Exploit.class);
        cq.select(root).where(cb.equal(root.get("user"), u));
        
        Query query = entityManager.createQuery(cq);
        List<Exploit> res = query.getResultList();
        
        if(res.size() > 0){
            return res;
        }else{
            return null;
        } 
    }

    @Override
    public List<Exploit> searchExp(String s) {
        CriteriaBuilder cb = entityManager.getCriteriaBuilder();
        CriteriaQuery<Exploit> cq = cb.createQuery(Exploit.class);
        Root<Exploit> root = cq.from(Exploit.class);
        cq.select(root).where(cb.like(root.get("name"), "%" + s + "%"));
        
        Query query = entityManager.createQuery(cq);
        List<Exploit> res = query.getResultList();
        
        if(res.size() > 0){
            return res;
        }else{
            return null;
        }
    }
         
    
}
