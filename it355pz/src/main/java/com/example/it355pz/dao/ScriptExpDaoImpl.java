
package com.example.it355pz.dao;

import com.example.it355pz.model.ScriptExp;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;
import org.springframework.stereotype.Repository;



@Repository
public class ScriptExpDaoImpl implements ScriptExpDao {
    
    @PersistenceContext
    private EntityManager entityManager;
    
    
    @Override
    public List<ScriptExp> getScriptExps() {
        CriteriaBuilder cb = entityManager.getCriteriaBuilder();
        CriteriaQuery <ScriptExp> cq = cb.createQuery(ScriptExp.class);
        Root <ScriptExp> root = cq.from(ScriptExp.class);
        cq.select(root);
        Query query = entityManager.createQuery(cq);
        return query.getResultList();
    }

    @Override
    public void saveScriptExp(ScriptExp s) {
        entityManager.persist(s);
        System.out.print("Gotovo cuvanje platforme!");
    }

    @Override
    public ScriptExp getScriptExp(int id) {
        ScriptExp s = entityManager.find(ScriptExp.class, id);
        return s;
    }

    @Override
    public ScriptExp deleteScriptExp(ScriptExp s) {
        if(entityManager.contains(s)){
            entityManager.remove(s);
        }else{
            entityManager.remove(entityManager.merge(s));
        }
        
        return s;
    }

    @Override
    public ScriptExp updateScriptExp(ScriptExp s) {
        entityManager.merge(s);
        return s;
    }

    @Override
    public ScriptExp findScriptExpByName(String name) {
        CriteriaBuilder cb = entityManager.getCriteriaBuilder();
        CriteriaQuery<ScriptExp> cq = cb.createQuery(ScriptExp.class);
        Root<ScriptExp> root = cq.from(ScriptExp.class);
        cq.select(root).where(cb.equal(root.get("name"), name));
        
        Query query = entityManager.createQuery(cq);
        query.setMaxResults(1);
        List<ScriptExp> res = query.getResultList();
        
        if(res.size() > 0){
            return res.get(0);
        }else{
            return null;
        }
    }
    
}
